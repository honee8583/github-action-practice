name: CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/yogi-odi-gym

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      # 도커 로그인
      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      # 도커허브로 push
      - name: Docker Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: NCP Docker Swarm Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if docker service inspect yog >/dev/null 2>&1; then
              echo "Updating existing service..."
              docker service update --image ${{ env.IMAGE_NAME }}:dev yog
            else
              echo "Creating new service..."
              docker service create \
                --name yog \
                --replicas 3 \
                -p 8080:8080 \
                ${{ env.IMAGE_NAME }}:dev
            fi