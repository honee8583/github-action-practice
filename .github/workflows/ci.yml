name: CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/yogi-odi-gym

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

#      - name: Log in to NCP Container Registry
#        run: |
#          echo ${{ secrets.NCP_ACCESS_KEY }} | docker login -u ${{ secrets.NCP_ACCESS_KEY}} --password-stdin https://cr.eu-north-1.ncloudservice.com
#        env:
#          NCP_ACCESS_KEY: ${{ secrets.NCP_ACCESS_KEY }}
#          NCP_SECRET_KEY: ${{ secrets.NCP_SECRET_KEY }}

      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_REGISTRY_URL }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: |
#            ${{ secrets.NCP_REGISTRY_URL }}/${{ secrets.NCP_REPOSITORY_NAME}}:${{ github.ref_name }}
##            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
#        env:
#          NCP_REGISTRY_URL: ${{ secrets.NCP_REGISTRY_URL }}
#          NCP_REPOSITORY_NAME: ${{ secrets.yogi-odi-gym-registry }}

      - name: SSH into Server and Deploy Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if docker service inspect my-service >/dev/null 2>&1; then
              echo "Updating existing service..."
              docker service update --image ${{ env.IMAGE_NAME }}:dev yog
            else
              echo "Creating new service..."
              docker service create \
                --name yog \
                --replicas 3 \
                -p 8080:8080 \
                ${{ env.IMAGE_NAME }}:dev
            fi